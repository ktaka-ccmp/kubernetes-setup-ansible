# Usage:
#  ansible-playbook -i ./hosts ./thw.yml -vv
#

- hosts: localhost
  become: yes
  become_user: root

  vars_files:
  - vars.yml

  tasks:

  - shell: kubectl config set-cluster {{ cluster_name }} \
      --certificate-authority={{ pki_dir }}/ca.pem \
      --embed-certs=true \
      --server={% for host in groups.masters %}https://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:443{% if not loop.last %},{% endif %}{% endfor %} \
      --kubeconfig={{ item }}.kubeconfig
    with_items: "{{ groups.nodes }}"

  - shell: kubectl config set-credentials system:node:{{ item }} \
      --client-certificate={{ pki_dir }}/{{ item }}.pem \
      --client-key={{ pki_dir }}/{{ item }}-key.pem \
      --embed-certs=true \
      --kubeconfig={{ item }}.kubeconfig
    with_items: "{{ groups.nodes }}"


  - shell: kubectl config set-context default \
      --cluster={{ cluster_name }} \
      --user=system:node:{{ item }} \
      --kubeconfig={{ item }}.kubeconfig
    with_items: "{{ groups.nodes }}"

  - shell: kubectl config use-context default --kubeconfig={{ item }}.kubeconfig
    with_items: "{{ groups.nodes }}"



  - shell: kubectl config set-cluster {{ cluster_name }} \
      --certificate-authority={{ pki_dir }}/ca.pem \
      --embed-certs=true \
      --server={% for host in groups.masters %}https://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:443{% if not loop.last %},{% endif %}{% endfor %} \
      --kubeconfig=kube-proxy.kubeconfig

  - shell: kubectl config set-credentials kube-proxy \
      --client-certificate={{ pki_dir }}/kube-proxy.pem \
      --client-key={{ pki_dir }}/kube-proxy-key.pem \
      --embed-certs=true \
      --kubeconfig=kube-proxy.kubeconfig

  - shell: kubectl config set-context default \
      --cluster={{ cluster_name }} \
      --user=kube-proxy \
      --kubeconfig=kube-proxy.kubeconfig

  - shell: kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig

##########
  - shell: head -c 32 /dev/urandom | base64
    register: encryption_key
  - template: src=files/pki/encryption-config.yaml dest={{ pki_dir }}/encryption-config.yaml

- hosts: nodes  
  become: yes
  become_user: root

  vars_files:
  - vars.yml

  tasks:

  - name: Create Kubeconfig directory
    file: path={{ kubeconfig_dir }} state=directory

  - name: Copy the certificates and private keys to masters
    copy: src={{ item }} dest={{ kubeconfig_dir }}/{{ item }}
    with_items: 
      - "{{ inventory_hostname }}.kubeconfig"
      - kube-proxy.kubeconfig


- hosts: masters  
  become: yes
  become_user: root

  vars_files:
  - vars.yml

  tasks:

  - name: Create Kubeconfig directory
    file: path={{ kubeconfig_dir }} state=directory

  - name: Copy the certificates and private keys to masters
    copy: src={{ pki_dir }}/{{ item }} dest={{ kubeconfig_dir }}/{{ item }}
    with_items: 
      - encryption-config.yaml

