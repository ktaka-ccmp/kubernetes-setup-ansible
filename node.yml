# Usage:
#  ansible-playbook -i ./hosts ./node.yml -vv
#

- hosts: nodes
  sudo: yes

  vars_files:
  - vars.yml

  vars:
    kube_daemons: [ 'kubelet', 'proxy' ]
    other_daemons: [ 'containerd', 'cri-containerd' ]
#    other_daemons: [ 'flanneld', 'dockerd', 'irq_set' ]
    packages: 
      - sudo
      - aptitude

  tasks:

  - template: src=files/node/etc/apt/apt.conf dest=/etc/apt/apt.conf
  - apt: update_cache=yes

  - apt: pkg={{ item }} state=present
    with_items:
      - "{{ packages }}"

  - apt: upgrade=yes

  - name: Download kubectl
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/{{ item }}
      dest: files/common/usr/local/bin/{{ item }}
      mode: 0755
      force: yes
    with_items:
      - kube-proxy
      - kubelet
      - kubectl
    run_once: true
    delegate_to: 127.0.0.1

  - name: k8s directories
    file: path={{ item }} state=directory
    with_items:
      - /etc/cni/net.d 
      - /opt/cni/bin
      - /var/lib/kubernetes
      - /var/run/kubernetes

  - name: Copy binaries 
    copy: src=files/common/usr/local/bin/{{ item }} dest=/usr/local/bin/{{ item }} mode=0755
    with_items: 
      - kubectl
      - kubelet
      - kube-proxy

  - name: Unarchive cni
    unarchive: 
      src: https://github.com/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-amd64-{{ cni_version }}.tgz
      dest: /opt/cni/bin/
      remote_src: yes

  - name: Unarchive cri
    unarchive:
      src: https://github.com/kubernetes-incubator/cri-containerd/releases/download/v{{ cri_version }}/cri-containerd-{{ cri_version }}.tar.gz
      dest: /
      exclude: ./etc
      remote_src: yes

  - name: Copy cni files
    copy: src=files/node/{{ item }} dest={{ item }} mode=0644
    with_items: 
      - /etc/cni/net.d/10-bridge.conf
      - /etc/cni/net.d/99-loopback.conf


  - file: path=/usr/service/{{ item }}/log state=directory mode=0755
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"

  - template: src=./files/node/usr/service/{{ item }}/run dest=/usr/service/{{ item }}/run mode=0700
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"
    notify: daemon-restart

  - template: src=./files/node/usr/service/{{ item }}/log/run dest=/usr/service/{{ item }}/log/run mode=0700
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"
    notify: daemon-restart

  - file: path=/etc/service/ state=directory mode=0755

  - file: src=/usr/service/{{ item }} dest=/etc/service/{{ item }} state=link
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"
    notify: daemon-restart

  - apt: pkg={{ item }} state=present
    with_items:
      - daemontools-run
    notify: daemon-restart

  - shell: 'svc -t /etc/service/* ; sleep 5'

  handlers:

  - name: daemon-restart
    shell: 'svc -t /etc/service/* ; sleep 3'

