# Usage:
#  ansible-playbook -i ./hosts ./node.yml -vv
#

- hosts: nodes
  sudo: yes

  vars:
    kube_daemons: [ 'kubelet', 'proxy' ]
    other_daemons: [ 'dockerd' ]
    packages: 
      - apt-transport-https
      - ca-certificates
      - bridge-utils
      - sudo
      - aptitude

  tasks:

  - apt: update_cache=yes

  - apt: pkg={{ item }} state=present
    with_items:
      - "{{ packages }}"

  - apt: upgrade=yes

########## PKI

  - local_action: file path=/root/KUBE_PKI state=directory

  - local_action: template src=files/pki/openssl.cnf dest=/root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.cnf
  - local_action: shell openssl genrsa -out /root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.key 2048
  - local_action: shell openssl req -new -key /root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.key -subj "/CN={{ ansible_eth0.ipv4.address }}" -out /root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.csr -config /root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.cnf
  - local_action: shell openssl x509 -req -in /root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.csr -CA /root/KUBE_PKI/ca.crt -CAkey /root/KUBE_PKI/ca.key -CAcreateserial -out /root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.crt -days 10000  -extensions v3_req -extfile /root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.cnf

  - file: path=/var/lib/kubelet/tls state=directory
  - copy: src=./files/node/var/lib/kubelet/kubeconfig dest=/var/lib/kubelet/kubeconfig
  - copy: src=/root/KUBE_PKI/ca.crt dest=/var/lib/kubelet/tls/ca.crt mode=0700
  - copy: src=/root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.key dest=/var/lib/kubelet/tls/kubelet.key mode=0700
  - copy: src=/root/KUBE_PKI/{{ ansible_eth0.ipv4.address }}.crt dest=/var/lib/kubelet/tls/kubelet.crt mode=0700

####################### docker-engine

  - file: path=/etc/apt/sources.list.d/ state=directory mode=0755
  - template: src=files/common/etc/apt/sources.list.d/docker.list  dest=/etc/apt/sources.list.d/docker.list
  - shell: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

  - apt: update_cache=yes
  - apt: upgrade=yes
  - apt: pkg=docker-engine state=present
  - service: name=docker state=stopped enabled=no
  - shell: /sbin/ip link del dev docker0
    ignore_errors: yes

########## 

  - unarchive: src=./files/common/usr/local/bin/{{ item }} dest=/usr/local/bin/
    with_items:
      - hyperkube.tar.xz
      - etcdctl.tar.xz

  - file: src=hyperkube dest=/usr/local/bin/{{ item }} state=link
    with_items:
      - "{{ kube_daemons }}"

  - file: path=/usr/service/{{ item }}/log state=directory mode=0755
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"

  - template: src=./files/node/usr/service/{{ item }}/run dest=/usr/service/{{ item }}/run mode=0700
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"

  - template: src=./files/node/usr/service/{{ item }}/log/run dest=/usr/service/{{ item }}/log/run mode=0700
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"

  - file: path=/etc/service/ state=directory mode=0755
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"

  - file: src=/usr/service/{{ item }} dest=/etc/service/{{ item }} state=link
    with_items:
      - "{{ kube_daemons }}"
      - "{{ other_daemons }}"

  - apt: pkg={{ item }} state=present
    with_items:
      - daemontools-run

  - shell: 'svc -t /etc/service/* ; sleep 3'

########################


